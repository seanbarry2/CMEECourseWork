Starting code feedback for Sean, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.62 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, week2, Feedback, week1

Found the following files in parent directory: README.md, .gitignore, gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*~ 
*.tmp

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
My CMEE Coursework Repository

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: week1, week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Results, sandbox, code, data

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
Project: Week 1 
Description: Includes all files used to learn the basics of UNIX, shell scripting and Latex.
Languages: shell / bash scripting

Structure:
Unix and linux basics included the creation of all directories, including CMEECourseWork, week1, code, data, results and sandbox. Additional files relating to UNIX basics include all "TestFile", "Test", "File" and "spawnnxs.txt". The main practical involving UNIX is stored under "code" and named "UnixPrac1.txt". In this practical 5 tasks had to be solved with commands (all info regarding this can be found in the file). Shell scripting files include "MyExampleScript.sh", "boilerplate.sh", "variables.sh", "tabtocsv.sh", "ConcatenateTwoFiles.sh" and "tiff2png.sh". The shell scripting practical involved writing a script that changes csv-delimited files to space-delimited files. Using the script, 4 csv files were changed to space delimited. LaTeX basics included making a basic pdf file with a bibliography, by using a templates provided on the MulQuaBio which were saved locally as "FirstExample.tex" and "Firstbiblio.bib". Then an accompanying bash script (CompileLaTeX.sh) was made and the final pdf (FirstExample.pdf) was created. All data was then pushed to git by following the guide on the MulQuaBio.

Sean Barry sb4524@ic.ac.uk

**********************************************************************

Results directory is empty - good! 

Found 12 code files: MyExampleScript.sh, UnixPrac1.txt, CountLines.sh, variables.sh, tabtocsv.sh, csvtospace.sh, tiff2png.sh, CompileLaTeX.sh, boilerplate.sh, FirstBiblio.bib, FirstExample.tex, ConcatenateTwoFiles.sh

Found the following extra files: FirstExample.pdf
0.5 pt deducted per extra file

Current Points = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/sh

MSG1="Hello"
MSG2=$USER
echo "$MSG1 $MSG2"
echo "Hello $USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00420s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
cd ../data
#1
wc -l 407228326.fasta 407228412.fasta E.coli.fasta

#2

tail -n +2 E.coli.fasta | less

#3

tail -n +2 E.coli.fasta | tr -d '\n' | wc -m

#4

tr -d '\n' < E.coli.fasta | grep -o "ATGC" | wc -l

#5

a_count=$(grep -o "A" E.coli.fasta | wc -l); t_count=$(grep -o "T" E.coli.fasta | wc -l); g_count=$(grep -o "G" E.coli.fasta | wc -l); c_count=$(grep -o "C" E.coli.fasta | wc -l); echo "scale=5; ($a_count + $t_count) / ($g_count + $c_count)" | bc

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The file  has  lines


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

CountLines.sh: line 3: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/sh

## Illustrates the use of variables 

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:
MY_VAR='some string' 
echo 'the current value of the variable is:' $MY_VAR
echo
echo 'Please enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (multiple values) from user input:
echo 'Enter two numbers separated by space(s)'
read a b
echo
echo 'you entered' $a 'and' $b '; Their sum is:'

## Assigned Variables; Command substitution
MY_SUM=$(expr $a + $b)
echo $MY_SUM

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Please enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)

you entered and ; Their sum is:


**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Sean Barry sb4524@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2024

if [ -z "$1" ]; then
  echo "Error: No input file provided."
  echo "Usage: $0 <input_file>"
  exit 1
fi

if [ ! -f "$1" ]; then
  echo "Error: File '$1' not found."
  exit 1
fi

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Error: No input file provided.
Usage: tabtocsv.sh <input_file>

**********************************************************************

Code ran without errors

Time consumed = 0.00373s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Sean Barry sb4524@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Replaces commas with spaces
# Arguments: 1 -> csv delimited file
# Date: Oct 2024

if [ -z "$1" ]; then
  echo "Error: No input file provided."
  echo "Usage: $0 <input_file>"
  exit 1
fi

if [ ! -f "$1" ]; then
  echo "Error: File '$1' not found."
  exit 1
fi

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "," " " >> ${1%.csv}_spacedelim.txt
echo "Done!"
exit

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Error: No input file provided.
Usage: csvtospace.sh <input_file>

**********************************************************************

Code ran without errors

Time consumed = 0.00424s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash

for f in *.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).png"; 
    done

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

convert-im6.q16: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2964.
convert-im6.q16: no images defined `*.png' @ error/convert.c/ConvertImageCommand/3234.

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
evince $1.pdf &

## Cleanup
rm *.aux
rm *.log
rm *.bbl
rm *.blg

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
This is pdfTeX, Version 3.141592653-2.6-1.40.25 (TeX Live 2023/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2023-11-01> patch level 1
L3 programming layer <2024-01-22>
File ignored)
*
! Emergency stop.
<*> 
    
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.141592653-2.6-1.40.25 (TeX Live 2023/Debian) (preloaded format=pdflatex)
**********************************************************************

Encountered error (or warning):

***IGNORE IF THIS ERROR IS EXPECTED AS PART OF AN IN-CLASS EXERCISE***

bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory

(process:145127): Gtk-WARNING **: 07:29:30.441: Locale not supported by C library.
	Using the fallback 'C' locale.

(evince:145127): Gtk-WARNING **: 07:29:30.494: Theme parsing error: gtk-keys.css:1:0: Failed to import: Error opening file /snap/code/172/usr/share/themes/Default/gtk-3.0/gtk-keys.css: Permission denied
Gtk-Message: 07:29:30.494: Failed to load module "canberra-gtk-module"
Gtk-Message: 07:29:30.495: Failed to load module "canberra-gtk-module"
/home/mhasoba/snap/code/common/.cache/gio-modules/libdconfsettings.so: cannot open shared object file: Permission denied
Failed to load module: /home/mhasoba/snap/code/common/.cache/gio-modules/libdconfsettings.so

** (evince:145127): WARNING **: 07:29:30.778: set_filenames: Error when getting information for file ?/home/mhasoba/Documents/Teaching/IC_CMEE/2024-25/Coursework/StudentRepos/SeanBarry_sb4524/week1/code/.pdf?: No such file or directory

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: Sean Barry sb4524@ic.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2024

echo -e "\nThis is a shell script! \n"

#exit


**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00574s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Sean Barry}

\date{Oct 11, 2024}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper analyzes a seminal equation in population biology.
  \end{abstract}
  
  \section{Introduction}
    Blah Blah Blah
  
  \section{Materials \& Methods}
  
  A foundational equation of population biology is:
  
  \begin{equation}
    \frac{dN}{dt} = r N (1 - \frac{N}{K})
  \end{equation}
  
  It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.
  
  \bibliographystyle{plain}
  
  \bibliography{FirstBiblio}

\end{document}

**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
if [ "$#" -lt 2 ]; then
  echo "Error: At least two input files are required."
  echo "Usage: $0 <input_file1> <input_file2> [output_file]"
  exit 1
fi

if [ ! -f "$1" ]; then
  echo "Error: File '$1' not found."
  exit 1
fi

if [ ! -f "$2" ]; then
  echo "Error: File '$2' not found."
  exit 1
fi

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Error: At least two input files are required.
Usage: ConcatenateTwoFiles.sh <input_file1> <input_file2> [output_file]

**********************************************************************

Code ran without errors

Time consumed = 0.00474s

======================================================================
======================================================================
Finished running scripts

Ran into 4 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!