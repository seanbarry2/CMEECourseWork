library(BAMMtools)
install.packages("BAMMtools")
library(BAMMtools)
library(ape)
setwd("~/Documents/CMEECourseWork/week8/data")
# Load FASTA file
fasta <- readLines("L_protein.txt")
# Remove blank lines and ensure valid headers
cleaned_fasta <- fasta[grepl("^>|^[ACGTacgt]+$", fasta)]
# Write cleaned FASTA to a new file
writeLines(cleaned_fasta, "L_protein_cleaned.fasta")
# Define the input FASTA file and output directory
input_fasta <- "L_protein.txt"  # Replace with your FASTA file path
output_dir <- "../data/individual_fastas"
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir, recursive = TRUE)
}
# Read the FASTA file
fasta_lines <- readLines(input_fasta)
# Initialize variables
current_header <- NULL
current_sequence <- c()
# Process the FASTA file
for (line in fasta_lines) {
if (startsWith(line, ">")) {
# Write the previous sequence to a file
if (!is.null(current_header)) {
output_file <- file.path(output_dir, paste0(current_header, ".fasta"))
writeLines(c(paste0(">", current_header), paste(current_sequence, collapse = "")), output_file)
}
# Start a new sequence
current_header <- gsub("[^A-Za-z0-9_-]", "_", substring(line, 2))  # Clean header
current_sequence <- c()
} else {
# Append the sequence line
current_sequence <- c(current_sequence, line)
}
}
# Write the last sequence to a file
if (!is.null(current_header)) {
output_file <- file.path(output_dir, paste0(current_header, ".fasta"))
writeLines(c(paste0(">", current_header), paste(current_sequence, collapse = "")), output_file)
}
cat("FASTA files have been created in:", output_dir, "\n")
source("~/Documents/CMEECourseWork/week8/code/Parser.R")
