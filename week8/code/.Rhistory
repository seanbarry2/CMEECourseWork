# Calculate the top 5% threshold
top_5_threshold <- quantile(values(pop_density), 0.95, na.rm = TRUE)
# Filter raster to include only values in the top 5%
high_density <- pop_density
values(high_density)[values(high_density) < top_5_threshold] <- NA  # Mask bottom 95% values
# Convert the high-density raster to a data frame
high_density_df <- as.data.frame(high_density, xy = TRUE, na.rm = TRUE)
colnames(high_density_df)[3] <- "population_density"
# Load landmass shapefile for visualizing land boundaries
world_map <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
# Plot the map with top 5% population density overlay
human_pop_map <- ggplot() +
# Add white background for the ocean
annotate("rect", xmin = -180, xmax = 180, ymin = -90, ymax = 90,
fill = "white", alpha = 1) +
# Add landmasses in grey
geom_sf(data = world_map, fill = "lightgrey", color = "black", size = 0.2) +
# Add high-density population areas as solid black
geom_tile(data = high_density_df, aes(x = x, y = y),
fill = "black", width = 0.04, height = 0.04, alpha = 0.8) +  # Adjusted tile size for 2.5-minute resolution
# Add title and customize the map layout
ggtitle("Top 5% Human Population Density (Zoomed-In - 2.5 min Resolution)") +
coord_sf(xlim = c(40, 125), ylim = c(10, 55), expand = FALSE) +  # Zoomed-in coordinates
theme_minimal() +
theme(
panel.grid = element_blank(),  # Remove grid lines
legend.position = "none",      # Remove the legend/key
plot.title = element_text(size = 14, hjust = 0.5)  # Center-align the title
)
# Display the map
print(human_pop_map)
# Save the map as a PNG in the results directory with specified size
ggsave("../results/human_population_map_2pt5_min_top_5_percent_zoomed_black.png",
plot = human_pop_map, width = 20, height = 12, dpi = 300)
# Load necessary libraries
library(terra)
library(ggplot2)
library(sf)
library(rnaturalearth)
# Load the 2.5-minute resolution population density data (GeoTIFF)
pop_density <- rast("../data/population_density/gpw_v4_population_density_rev11_2020_2pt5_min.tif")
# Calculate the top 5% threshold
top_5_threshold <- quantile(values(pop_density), 0.95, na.rm = TRUE)
# Filter raster to include only values in the top 5%
high_density <- pop_density
values(high_density)[values(high_density) < top_5_threshold] <- NA  # Mask bottom 95% values
# Convert the high-density raster to a data frame
high_density_df <- as.data.frame(high_density, xy = TRUE, na.rm = TRUE)
colnames(high_density_df)[3] <- "population_density"
# Load landmass shapefile for visualizing land boundaries
world_map <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Initialize an empty list to store species ranges
species_ranges <- list()
# Load all species shapefiles and combine into one shapefile
for (i in 1:nrow(species)) {
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
species_ranges[[i]] <- species_range
}
# Combine all species ranges into a single shapefile
combined_species_ranges <- do.call(rbind, species_ranges)
# Ensure CRS consistency for combined species ranges
combined_species_ranges <- st_transform(combined_species_ranges, crs = st_crs(world_map))
# Plot the map with top 5% population density and species overlay
human_pop_species_map <- ggplot() +
# Add white background for the ocean
annotate("rect", xmin = -180, xmax = 180, ymin = -90, ymax = 90,
fill = "white", alpha = 1) +
# Add landmasses in grey
geom_sf(data = world_map, fill = "lightgrey", color = "black", size = 0.2) +
# Add high-density population areas in black
geom_tile(data = high_density_df, aes(x = x, y = y),
fill = "black", width = 0.04, height = 0.04, alpha = 0.8) +
# Add combined species ranges in red
geom_sf(data = combined_species_ranges, fill = "red", color = NA, alpha = 0.4) +
# Add title and customize the map layout
ggtitle("Species Ranges Overlaid on Top 5% Human Population Density") +
coord_sf(xlim = c(40, 125), ylim = c(10, 55), expand = FALSE) +  # Zoomed-in coordinates
theme_minimal() +
theme(
panel.grid = element_blank(),  # Remove grid lines
legend.position = "none",      # Remove the legend/key
plot.title = element_text(size = 14, hjust = 0.5)  # Center-align the title
)
# Display the map
print(human_pop_species_map)
# Save the map as a PNG in the results directory with specified size
ggsave("../results/human_population_species_overlay.png",
plot = human_pop_species_map, width = 20, height = 12, dpi = 300)
# Load necessary libraries
library(terra)
library(ggplot2)
library(sf)
library(rnaturalearth)
# Load the 2.5-minute resolution population density data (GeoTIFF)
pop_density <- rast("../data/population_density/gpw_v4_population_density_rev11_2020_2pt5_min.tif")
# Calculate the top 5% threshold
top_5_threshold <- quantile(values(pop_density), 0.95, na.rm = TRUE)
# Filter raster to include only values in the top 5%
high_density <- pop_density
values(high_density)[values(high_density) < top_5_threshold] <- NA  # Mask bottom 95% values
# Convert the high-density raster to a data frame
high_density_df <- as.data.frame(high_density, xy = TRUE, na.rm = TRUE)
colnames(high_density_df)[3] <- "population_density"
# Load landmass shapefile for visualizing land boundaries
world_map <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Initialize an empty list to store species ranges
species_ranges <- list()
# Load all species shapefiles and combine them
for (i in 1:nrow(species)) {
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
species_ranges[[i]] <- species_range
}
# Combine all species ranges into a single layer
combined_species_ranges <- do.call(rbind, species_ranges)
combined_species_ranges <- st_union(combined_species_ranges)  # Dissolve into one geometry
# Ensure CRS consistency for combined species ranges
combined_species_ranges <- st_transform(combined_species_ranges, crs = st_crs(world_map))
# Plot the map with top 5% population density and combined species overlay
human_pop_species_map <- ggplot() +
# Add white background for the ocean
annotate("rect", xmin = -180, xmax = 180, ymin = -90, ymax = 90,
fill = "white", alpha = 1) +
# Add landmasses in grey
geom_sf(data = world_map, fill = "lightgrey", color = "black", size = 0.2) +
# Add high-density population areas in black
geom_tile(data = high_density_df, aes(x = x, y = y),
fill = "black", width = 0.04, height = 0.04, alpha = 0.8) +
# Add combined species ranges in red as a single layer
geom_sf(data = combined_species_ranges, fill = "red", color = NA, alpha = 0.4) +
# Add title and customize the map layout
ggtitle("Unified Species Ranges Overlaid on Top 5% Human Population Density") +
coord_sf(xlim = c(40, 125), ylim = c(10, 55), expand = FALSE) +  # Zoomed-in coordinates
theme_minimal() +
theme(
panel.grid = element_blank(),  # Remove grid lines
legend.position = "none",      # Remove the legend/key
plot.title = element_text(size = 14, hjust = 0.5)  # Center-align the title
)
# Display the map
print(human_pop_species_map)
# Save the map as a PNG in the results directory with specified size
ggsave("../results/human_population_species_overlay_unified.png",
plot = human_pop_species_map, width = 20, height = 12, dpi = 300)
source("~/Documents/CMEECourseWork/week8/code/Human_pop.R")
# Load necessary libraries
library(terra)
library(sf)
library(dplyr)
# Load the 2.5-minute resolution population density data (GeoTIFF)
pop_density <- rast("../data/population_density/gpw_v4_population_density_rev11_2020_2pt5_min.tif")
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Initialize a data frame to store results
results <- data.frame(
Species = character(),
MeanDensity = numeric(),
MedianDensity = numeric(),
MinDensity = numeric(),
MaxDensity = numeric(),
stringsAsFactors = FALSE
)
# Loop through each species
for (i in 1:nrow(species)) {
# Load species shapefile
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
# Ensure CRS consistency with population density raster
species_range <- st_transform(species_range, crs = crs(pop_density))
# Mask the population density raster to the species range
masked_density <- mask(pop_density, vect(species_range))
# Extract raster values within the species range
density_values <- values(masked_density, na.rm = TRUE)
# Calculate statistics
mean_density <- mean(density_values, na.rm = TRUE)
median_density <- median(density_values, na.rm = TRUE)
min_density <- min(density_values, na.rm = TRUE)
max_density <- max(density_values, na.rm = TRUE)
# Append the results to the data frame
results <- rbind(
results,
data.frame(
Species = species$common_name[i],
MeanDensity = mean_density,
MedianDensity = median_density,
MinDensity = min_density,
MaxDensity = max_density,
stringsAsFactors = FALSE
)
)
}
# Write the results to a CSV file in the results directory
output_file <- "../results/population_density_stats_by_species.csv"
write.csv(results, output_file, row.names = FALSE)
# Print confirmation message
cat("Results saved to:", output_file, "\n")
read.csv("../results/population_density_stats_by_species.csv", header = T)
DACSV <- read.csv("../results/population_density_stats_by_species.csv", header = T)
View(DACSV)
# Load necessary libraries
library(terra)
library(sf)
library(dplyr)
# Load the 2.5-minute resolution population density data (GeoTIFF)
pop_density <- rast("../data/population_density/gpw_v4_population_density_rev11_2020_2pt5_min.tif")
# Calculate the top 5% threshold
top_5_threshold <- quantile(values(pop_density), 0.95, na.rm = TRUE)
# Filter raster to include only values in the top 5%
high_density <- pop_density
values(high_density)[values(high_density) < top_5_threshold] <- NA  # Mask bottom 95% values
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Initialize a data frame to store results
results <- data.frame(
Species = character(),
Top5PercentDots = numeric(),
stringsAsFactors = FALSE
)
# Loop through each species
for (i in 1:nrow(species)) {
# Load species shapefile
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
# Ensure CRS consistency with population density raster
species_range <- st_transform(species_range, crs = crs(pop_density))
# Mask the top 5% population density raster to the species range
masked_density <- mask(high_density, vect(species_range))
# Count the number of cells (dots) in the top 5% for this species
num_dots <- sum(!is.na(values(masked_density)))
# Append the results to the data frame
results <- rbind(
results,
data.frame(
Species = species$common_name[i],
Top5PercentDots = num_dots,
stringsAsFactors = FALSE
)
)
}
# Write the results to a CSV file in the results directory
output_file <- "../results/top_5_percent_dots_by_species.csv"
write.csv(results, output_file, row.names = FALSE)
# Print confirmation message
cat("Results saved to:", output_file, "\n")
rm(ls=list())
rm(list = ls())
gc()
# Load necessary libraries
library(sf)        # For spatial operations
library(terra)     # For raster and vector data manipulation
library(dplyr)     # For data manipulation
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Load Goitered Gazelle shapefile
goitered_gazelle_file <- file.path(base_dir, "gazella_subgutturosa", "data_0.shp")
goitered_gazelle <- st_read(goitered_gazelle_file, quiet = TRUE)
# Ensure CRS is consistent
goitered_gazelle <- st_transform(goitered_gazelle, crs = "EPSG:4326")
# Initialize a data frame to store results
overlap_results <- data.frame(
Species = character(),
Overlap_km2 = numeric(),
stringsAsFactors = FALSE
)
# Loop through each species
for (i in 1:nrow(species)) {
# Skip Goitered Gazelle itself
if (species$latin_name[i] == "gazella_subgutturosa") next
# Load species shapefile
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
# Ensure CRS is consistent
species_range <- st_transform(species_range, crs = st_crs(goitered_gazelle))
# Calculate intersection between the species and Goitered Gazelle ranges
intersection <- st_intersection(goitered_gazelle, species_range)
# Calculate the area of overlap in km²
if (nrow(intersection) > 0) {  # Check if intersection exists
overlap_area <- sum(st_area(intersection)) / 1e6  # Convert m² to km²
} else {
overlap_area <- 0  # No overlap
}
# Append results
overlap_results <- rbind(
overlap_results,
data.frame(
Species = species$common_name[i],
Overlap_km2 = round(as.numeric(overlap_area), 2),
stringsAsFactors = FALSE
)
)
}
source("~/.active-rstudio-document")
A <- read.csv("../results/population_density_stats_by_species.csv", header = T)
View(A)
A <- read.csv("../results/overlap_with_goitered_gazelle.csv", header = T)
# Load necessary libraries
library(sf)        # For spatial operations
library(terra)     # For raster and vector data manipulation
library(dplyr)     # For data manipulation
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Load Goitered Gazelle shapefile
goitered_gazelle_file <- file.path(base_dir, "gazella_subgutturosa", "data_0.shp")
goitered_gazelle <- st_read(goitered_gazelle_file, quiet = TRUE)
# Ensure CRS is consistent
goitered_gazelle <- st_transform(goitered_gazelle, crs = "EPSG:4326")
# Initialize a data frame to store results
overlap_results <- data.frame(
Species = character(),
Overlap_km2 = numeric(),
Range_km2 = numeric(),
Overlap_Percentage = numeric(),
stringsAsFactors = FALSE
)
# Loop through each species
for (i in 1:nrow(species)) {
# Skip Goitered Gazelle itself
if (species$latin_name[i] == "gazella_subgutturosa") next
# Load species shapefile
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
# Validate and correct geometries
species_range <- st_make_valid(species_range)
goitered_gazelle <- st_make_valid(goitered_gazelle)
# Ensure CRS is consistent
species_range <- st_transform(species_range, crs = st_crs(goitered_gazelle))
# Calculate intersection between the species and Goitered Gazelle ranges
intersection <- st_intersection(goitered_gazelle, species_range)
# Calculate the area of overlap in km²
if (nrow(intersection) > 0) {  # Check if intersection exists
overlap_area <- sum(st_area(intersection)) / 1e6  # Convert m² to km²
} else {
overlap_area <- 0  # No overlap
}
# Calculate total range area of the species in km²
species_area <- sum(st_area(species_range)) / 1e6  # Convert m² to km²
# Calculate percentage overlap
overlap_percentage <- ifelse(species_area > 0, (overlap_area / species_area) * 100, 0)
# Append results
overlap_results <- rbind(
overlap_results,
data.frame(
Species = species$common_name[i],
Overlap_km2 = round(as.numeric(overlap_area), 2),
Range_km2 = round(as.numeric(species_area), 2),
Overlap_Percentage = round(overlap_percentage, 2),
stringsAsFactors = FALSE
)
)
}
# Load necessary libraries
library(sf)        # For spatial operations
library(terra)     # For raster and vector data manipulation
library(dplyr)     # For data manipulation
# Define the list of species shapefiles
species <- data.frame(
common_name = c(
"Goitered gazelle", "Saiga antelope", "Mongolian gazelle",
"Himalayan tahr", "Chinkara", "Markhor",
"Urial", "Bharal", "Tibetan gazelle", "Chiru"
),
latin_name = c(
"gazella_subgutturosa", "saiga_tatarica", "procapra_gutturosa",
"hemitragus_jemlahicus", "gazella_bennettii", "capra_falconeri",
"ovis_vignei", "pseudois_nayaur", "procapra_picticaudata", "pantholops_hodgsonii"
)
)
# Directory path to species shapefiles
base_dir <- "../data/SHP_files"
# Load Goitered Gazelle shapefile
goitered_gazelle_file <- file.path(base_dir, "gazella_subgutturosa", "data_0.shp")
goitered_gazelle <- st_read(goitered_gazelle_file, quiet = TRUE)
# Ensure CRS is consistent
goitered_gazelle <- st_transform(goitered_gazelle, crs = "EPSG:4326")
# Initialize a data frame to store results
overlap_results <- data.frame(
Species = character(),
Overlap_km2 = numeric(),
Range_km2 = numeric(),
Overlap_Percentage = numeric(),
stringsAsFactors = FALSE
)
# Loop through each species
for (i in 1:nrow(species)) {
# Skip Goitered Gazelle itself
if (species$latin_name[i] == "gazella_subgutturosa") next
# Load species shapefile
shp_file <- file.path(base_dir, species$latin_name[i], "data_0.shp")
species_range <- st_read(shp_file, quiet = TRUE)
# Validate and correct geometries
species_range <- st_make_valid(species_range)
goitered_gazelle <- st_make_valid(goitered_gazelle)
# Ensure CRS is consistent
species_range <- st_transform(species_range, crs = st_crs(goitered_gazelle))
# Calculate intersection between the species and Goitered Gazelle ranges
intersection <- st_intersection(goitered_gazelle, species_range)
# Calculate the area of overlap in km²
if (nrow(intersection) > 0) {  # Check if intersection exists
overlap_area <- sum(st_area(intersection)) / 1e6  # Convert m² to km²
} else {
overlap_area <- 0  # No overlap
}
# Calculate total range area of the species in km²
species_area <- sum(st_area(species_range)) / 1e6  # Convert m² to km²
# Convert areas to numeric values for consistent calculations
overlap_area <- as.numeric(overlap_area)
species_area <- as.numeric(species_area)
# Calculate percentage overlap
overlap_percentage <- ifelse(species_area > 0, (overlap_area / species_area) * 100, 0)
# Append results
overlap_results <- rbind(
overlap_results,
data.frame(
Species = species$common_name[i],
Overlap_km2 = round(overlap_area, 2),
Range_km2 = round(species_area, 2),
Overlap_Percentage = round(overlap_percentage, 2),
stringsAsFactors = FALSE
)
)
}
# Write the results to a CSV file in the results directory
output_file <- "../results/overlap_percentage_with_goitered_gazelle.csv"
write.csv(overlap_results, output_file, row.names = FALSE)
# Print confirmation message
cat("Overlap results saved to:", output_file, "\n")
A <- read.csv("../results/overlap_percentage_with_goitered_gazelle.csv", header = T)
TOP <- read.csv("../results/top_5_percent_dots_by_species.csv", header = T)
View(TOP)
