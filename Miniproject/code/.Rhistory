y_arrow_end <- max_pop + 5
y_label_max <- y_arrow_end
y_label_min <- y_label_max - 2
label_boxes$ymin <- y_label_min
label_boxes$ymax <- y_label_max
##############################
### 4. Axis Arrows
##############################
x_arrow_end <- t_max + 2
##############################
### 5. ggplot
##############################
p <- ggplot() +
# 5A. Background rectangles
geom_rect(
data = phase_regions,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = fill),
alpha = 1
) +
# 5B. Main piecewise line
geom_line(
data = df_line,
aes(x = Time, y = Population),
color = "#006681",
linewidth = 1.2
) +
# 5C. Full-width label boxes
geom_rect(
data = label_boxes,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = fill),
alpha = 1
) +
# 5D. Label text in the center of each box
geom_text(
data = label_boxes,
aes(
x = (xmin + xmax) / 2,
y = (ymin + ymax) / 2,
label = label
),
color = "#004254",   # label text color
size = 5,            # larger text
fontface = "bold"
) +
# 5E. X-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = x_arrow_end, yend = 0),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5F. Y-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = 0, yend = y_arrow_end),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5G. Set coordinate limits
coord_cartesian(
xlim = c(-1, x_arrow_end),
ylim = c(0, y_arrow_end)
) +
# 5H. Remove default axis ticks/labels
scale_x_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
scale_y_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
# 5I. Enforce fill colors
scale_fill_identity() +
# 5J. Minimal theme, bigger base font
theme_minimal(base_size = 16) +
theme(
panel.grid  = element_blank(),
axis.line   = element_blank(),
axis.ticks  = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Bold axis labels
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
# Keep the previously set margin or change as needed
plot.margin = margin(2, 2, 2, 2, unit = "cm")
) +
# 5K. Axis labels
labs(x = "Time", y = "Population")
print(p)
#!/usr/bin/env Rscript
library(ggplot2)
library(dplyr)
library(grid) # for arrow()
##############################
### 1. Define Four Phases  ###
##############################
lag_end    <- 2
growth_end <- 8
stat_end   <- 12
t_max      <- 24
# Slightly higher lag phase start => 0.5
N0_lag     <- 0.5
# Steeper death phase => final pop is 0
N0_growth_end  <- 10
N0_death_final <- 0
time_points <- c(
0,        lag_end,
lag_end,  growth_end,
growth_end, stat_end,
stat_end,   t_max
)
pop_points <- c(
# Lag: 0..2 => ~0.5
N0_lag, N0_lag,
# Growth: 2..8 => line from 0.5 to 10
N0_lag, N0_growth_end,
# Stationary: 8..12 => constant at 10
N0_growth_end, N0_growth_end,
# Death: 12..24 => line from 10 to 0
N0_growth_end, N0_death_final
)
df_line <- data.frame(
Time       = time_points,
Population = pop_points
)
##############################
### 2. Background Phase Colors
##############################
phase_regions <- data.frame(
phase = c("Lag", "Growth", "Stationary", "Death"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#d8eff4", "#bce3ef", "#95d5e6", "#6dc7de")
)
##############################
### 3. Label Boxes
##############################
label_boxes <- data.frame(
label = c("Lag phase", "Growth phase", "Stationary phase", "Death phase"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#bce3ef", "#95d5e6", "#6dc7de", "#5db1c6")
)
max_pop    <- max(pop_points)
y_arrow_end <- max_pop + 5
y_label_max <- y_arrow_end
y_label_min <- y_label_max - 2
label_boxes$ymin <- y_label_min
label_boxes$ymax <- y_label_max
##############################
### 4. Axis Arrows
##############################
x_arrow_end <- t_max + 2
##############################
### 5. ggplot
##############################
p <- ggplot() +
# 5A. Background rectangles
geom_rect(
data = phase_regions,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = fill),
alpha = 1
) +
# 5B. Main piecewise line
geom_line(
data = df_line,
aes(x = Time, y = Population),
color = "#006681",
linewidth = 1.2
) +
# 5C. Full-width label boxes
geom_rect(
data = label_boxes,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = fill),
alpha = 1
) +
# 5D. Label text in the center of each box
geom_text(
data = label_boxes,
aes(
x = (xmin + xmax) / 2,
y = (ymin + ymax) / 2,
label = label
),
color = "#004254",   # label text color
size = 5,            # larger text
fontface = "bold"
) +
# 5E. X-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = x_arrow_end, yend = 0),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5F. Y-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = 0, yend = y_arrow_end),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5G. Set coordinate limits
coord_cartesian(
xlim = c(-1, x_arrow_end),
ylim = c(0, y_arrow_end)
) +
# 5H. Remove default axis ticks/labels
scale_x_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
scale_y_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
# 5I. Enforce fill colors
scale_fill_identity() +
# 5J. Minimal theme, bigger base font
theme_minimal(base_size = 16) +
theme(
panel.grid  = element_blank(),
axis.line   = element_blank(),
axis.ticks  = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Bold axis labels
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
# Move axis titles 2 cm away from the plotting region
axis.title.x = element_text(margin = margin(t = 2, unit = "cm")),
axis.title.y = element_text(margin = margin(r = 2, unit = "cm"))
# Keep the previously set margin or change as needed
plot.margin = margin(2, 2, 2, 2, unit = "cm")
#!/usr/bin/env Rscript
library(ggplot2)
library(dplyr)
library(grid) # for arrow()
##############################
### 1. Define Four Phases  ###
##############################
lag_end    <- 2
growth_end <- 8
stat_end   <- 12
t_max      <- 24
# Slightly higher lag phase start => 0.5
N0_lag     <- 0.5
# Steeper death phase => final pop is 0
N0_growth_end  <- 10
N0_death_final <- 0
time_points <- c(
0,        lag_end,
lag_end,  growth_end,
growth_end, stat_end,
stat_end,   t_max
)
pop_points <- c(
# Lag: 0..2 => ~0.5
N0_lag, N0_lag,
# Growth: 2..8 => line from 0.5 to 10
N0_lag, N0_growth_end,
# Stationary: 8..12 => constant at 10
N0_growth_end, N0_growth_end,
# Death: 12..24 => line from 10 to 0
N0_growth_end, N0_death_final
)
df_line <- data.frame(
Time       = time_points,
Population = pop_points
)
##############################
### 2. Background Phase Colors
##############################
phase_regions <- data.frame(
phase = c("Lag", "Growth", "Stationary", "Death"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#d8eff4", "#bce3ef", "#95d5e6", "#6dc7de")
)
##############################
### 3. Label Boxes
##############################
label_boxes <- data.frame(
label = c("Lag phase", "Growth phase", "Stationary phase", "Death phase"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#bce3ef", "#95d5e6", "#6dc7de", "#5db1c6")
)
max_pop    <- max(pop_points)
y_arrow_end <- max_pop + 5
y_label_max <- y_arrow_end
y_label_min <- y_label_max - 2
label_boxes$ymin <- y_label_min
label_boxes$ymax <- y_label_max
##############################
### 4. Axis Arrows
##############################
x_arrow_end <- t_max + 2
##############################
### 5. ggplot
##############################
p <- ggplot() +
# 5A. Background rectangles
geom_rect(
data = phase_regions,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = fill),
alpha = 1
) +
# 5B. Main piecewise line
geom_line(
data = df_line,
aes(x = Time, y = Population),
color = "#006681",
linewidth = 1.2
) +
# 5C. Full-width label boxes
geom_rect(
data = label_boxes,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = fill),
alpha = 1
) +
# 5D. Label text in the center of each box
geom_text(
data = label_boxes,
aes(
x = (xmin + xmax) / 2,
y = (ymin + ymax) / 2,
label = label
),
color = "#004254",   # label text color
size = 5,            # larger text
fontface = "bold"
) +
# 5E. X-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = x_arrow_end, yend = 0),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5F. Y-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = 0, yend = y_arrow_end),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5G. Set coordinate limits
coord_cartesian(
xlim = c(-1, x_arrow_end),
ylim = c(0, y_arrow_end)
) +
# 5H. Remove default axis ticks/labels
scale_x_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
scale_y_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
# 5I. Enforce fill colors
scale_fill_identity() +
# 5J. Minimal theme, bigger base font
theme_minimal(base_size = 16) +
theme(
panel.grid  = element_blank(),
axis.line   = element_blank(),
axis.ticks  = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Bold axis labels
axis.title.x = element_text(face = "bold", margin = margin(t = 2, unit = "cm")),
axis.title.y = element_text(face = "bold", margin = margin(t = 2, unit = "cm")),
# Keep the previously set margin or change as needed
plot.margin = margin(2, 2, 2, 2, unit = "cm")
) +
# 5K. Axis labels
labs(x = "Time", y = "Population")
print(p)
#!/usr/bin/env Rscript
library(ggplot2)
library(dplyr)
library(grid) # for arrow()
##############################
### 1. Define Four Phases  ###
##############################
lag_end    <- 2
growth_end <- 8
stat_end   <- 12
t_max      <- 24
# Slightly higher lag phase start => 0.5
N0_lag     <- 0.5
# Steeper death phase => final pop is 0
N0_growth_end  <- 10
N0_death_final <- 0
time_points <- c(
0,        lag_end,
lag_end,  growth_end,
growth_end, stat_end,
stat_end,   t_max
)
pop_points <- c(
# Lag: 0..2 => ~0.5
N0_lag, N0_lag,
# Growth: 2..8 => line from 0.5 to 10
N0_lag, N0_growth_end,
# Stationary: 8..12 => constant at 10
N0_growth_end, N0_growth_end,
# Death: 12..24 => line from 10 to 0
N0_growth_end, N0_death_final
)
df_line <- data.frame(
Time       = time_points,
Population = pop_points
)
##############################
### 2. Background Phase Colors
##############################
phase_regions <- data.frame(
phase = c("Lag", "Growth", "Stationary", "Death"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#d8eff4", "#bce3ef", "#95d5e6", "#6dc7de")
)
##############################
### 3. Label Boxes
##############################
label_boxes <- data.frame(
label = c("Lag phase", "Growth phase", "Stationary phase", "Death phase"),
xmin  = c(0,       lag_end,    growth_end, stat_end),
xmax  = c(lag_end, growth_end, stat_end,   t_max),
fill  = c("#bce3ef", "#95d5e6", "#6dc7de", "#5db1c6")
)
max_pop    <- max(pop_points)
y_arrow_end <- max_pop + 5
y_label_max <- y_arrow_end
y_label_min <- y_label_max - 2
label_boxes$ymin <- y_label_min
label_boxes$ymax <- y_label_max
##############################
### 4. Axis Arrows
##############################
x_arrow_end <- t_max + 2
##############################
### 5. ggplot
##############################
p <- ggplot() +
# 5A. Background rectangles
geom_rect(
data = phase_regions,
aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = Inf, fill = fill),
alpha = 1
) +
# 5B. Main piecewise line
geom_line(
data = df_line,
aes(x = Time, y = Population),
color = "#006681",
linewidth = 1.2
) +
# 5C. Full-width label boxes
geom_rect(
data = label_boxes,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = fill),
alpha = 1
) +
# 5D. Label text in the center of each box
geom_text(
data = label_boxes,
aes(
x = (xmin + xmax) / 2,
y = (ymin + ymax) / 2,
label = label
),
color = "#004254",   # label text color
size = 5,            # larger text
fontface = "bold"
) +
# 5E. X-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = x_arrow_end, yend = 0),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5F. Y-axis (arrow)
geom_segment(
aes(x = 0, y = 0, xend = 0, yend = y_arrow_end),
arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
linewidth = 1.2
) +
# 5G. Set coordinate limits
coord_cartesian(
xlim = c(-1, x_arrow_end),
ylim = c(0, y_arrow_end)
) +
# 5H. Remove default axis ticks/labels
scale_x_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
scale_y_continuous(breaks = NULL, labels = NULL, expand = c(0,0)) +
# 5I. Enforce fill colors
scale_fill_identity() +
# 5J. Minimal theme, bigger base font
theme_minimal(base_size = 16) +
theme(
panel.grid  = element_blank(),
axis.line   = element_blank(),
axis.ticks  = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Bold axis labels
axis.title.x = element_text(face = "bold", margin = margin(t = 2, unit = "cm")),
axis.title.y = element_text(face = "bold", margin = margin(t = 2, unit = "cm")),
# Keep the previously set margin or change as needed
plot.margin = margin(2, 2, 2, 2, unit = "cm")
) +
# 5K. Axis labels
labs(x = "Time", y = "Population")
print(p)
unique(data$Medium)
unique(data$Species)
# Read the data from the CSV file
MFR <- read.csv("../results/model_fitting_results.csv")
unique(MFR$group_id)
table <- table(MFR$group_id)
table
valid_count <- sum(is.finite(MFR$group_id))
cat("Number of valid group_id values (non-NA and finite):", valid_count, "\n")
# For non-numeric columns, just check for non-NA values
valid_count <- sum(!is.na(MFR$group_id))
cat("Number of non-NA group_id values:", valid_count, "\n")
# For non-numeric columns, just check for non-NA values
valid_count <- sum(!is.na(data$group_id))
cat("Number of non-NA group_id values:", valid_count, "\n")
unique(data$group_id)
